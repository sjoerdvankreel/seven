cmake_policy(SET CMP0091 NEW)
cmake_minimum_required(VERSION 3.21)
project(seven)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_EXTENSIONS OFF)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CONFIGURATION_TYPES "Debug;Release")

add_compile_options(/wd26451)
add_compile_options(/wd26498)
add_compile_options(/wd26812)

# VST SDK debug binaries.
find_library(BASE_LIB_Debug base PATHS "${VST_SDK_375_BUILD_DEBUG_DIR}")
find_library(SDK_LIB_Debug sdk PATHS "${VST_SDK_375_BUILD_DEBUG_DIR}")
find_library(SDK_COMMON_LIB_Debug sdk_common PATHS "${VST_SDK_375_BUILD_DEBUG_DIR}")
find_library(PLUGINTERFACES_LIB_Debug pluginterfaces PATHS "${VST_SDK_375_BUILD_DEBUG_DIR}")
find_library(VSTGUI_LIB_Debug vstgui PATHS "${VST_SDK_375_BUILD_DEBUG_DIR}")
find_library(VSTGUI_SUPPORT_LIB_Debug vstgui_support PATHS "${VST_SDK_375_BUILD_DEBUG_DIR}")
find_library(VSTGUI_UIDESCRIPTION_LIB_Debug vstgui_uidescription PATHS "${VST_SDK_375_BUILD_DEBUG_DIR}")

# VST SDK release binaries.
find_library(BASE_LIB_Release base PATHS "${VST_SDK_375_BUILD_RELEASE_DIR}")
find_library(SDK_LIB_Release sdk PATHS "${VST_SDK_375_BUILD_RELEASE_DIR}")
find_library(SDK_COMMON_LIB_Release sdk_common PATHS "${VST_SDK_375_BUILD_RELEASE_DIR}")
find_library(PLUGINTERFACES_LIB_Release pluginterfaces PATHS "${VST_SDK_375_BUILD_RELEASE_DIR}")
find_library(VSTGUI_LIB_Release vstgui PATHS "${VST_SDK_375_BUILD_RELEASE_DIR}")
find_library(VSTGUI_SUPPORT_LIB_Release vstgui_support PATHS "${VST_SDK_375_BUILD_RELEASE_DIR}")
find_library(VSTGUI_UIDESCRIPTION_LIB_Release vstgui_uidescription PATHS "${VST_SDK_375_BUILD_RELEASE_DIR}")

# Svn base library.
set(SVN_BASE_SRC_DIR "src/svn.base")
file(GLOB_RECURSE SVN_BASE_SRC "${SVN_BASE_SRC_DIR}/*.*")
add_library(seven.base STATIC ${SVN_BASE_SRC})
source_group(TREE "../../${SVN_BASE_SRC_DIR}" FILES ${SVN_BASE_SRC})
target_include_directories(seven.base PRIVATE ${SVN_BASE_SRC_DIR})

# Svn synth library.
set(SVN_SYNTH_SRC_DIR "src/svn.synth")
file(GLOB_RECURSE SVN_SYNTH_SRC "${SVN_SYNTH_SRC_DIR}/*.*")
add_library(seven.synth STATIC ${SVN_SYNTH_SRC})
source_group(TREE "../../${SVN_SYNTH_SRC_DIR}" FILES ${SVN_SYNTH_SRC})
target_include_directories(seven.synth PRIVATE ${SVN_BASE_SRC_DIR})
target_include_directories(seven.synth PRIVATE ${SVN_SYNTH_SRC_DIR})
target_link_libraries(seven.synth seven.base)

# Svn vst base library.
set(SVN_VST_BASE_SRC_DIR "src/svn.vst.base")
file(GLOB_RECURSE SVN_VST_BASE_SRC "${SVN_VST_BASE_SRC_DIR}/*.*")
add_library(seven.vst.base STATIC ${SVN_VST_BASE_SRC})
source_group(TREE "../../${SVN_VST_BASE_SRC_DIR}" FILES ${SVN_VST_BASE_SRC})
target_compile_definitions(seven.vst.base PRIVATE $<$<CONFIG:Debug>:DEVELOPMENT=1>)
target_include_directories(seven.vst.base PRIVATE ${SVN_BASE_SRC_DIR})
target_include_directories(seven.vst.base PRIVATE ${SVN_VST_BASE_SRC_DIR})
target_include_directories(seven.vst.base PRIVATE ${VST_SDK_375_SRC_DIR})
target_include_directories(seven.vst.base PRIVATE ${VST_SDK_375_SRC_DIR}/vstgui4)
target_link_libraries(seven.vst.base seven.base)
target_link_libraries(seven.vst.base debug "${BASE_LIB_Debug}" optimized "${BASE_LIB_Release}")
target_link_libraries(seven.vst.base debug "${SDK_LIB_Debug}" optimized "${SDK_LIB_Release}")
target_link_libraries(seven.vst.base debug "${SDK_COMMON_LIB_Debug}" optimized "${SDK_COMMON_LIB_Release}")
target_link_libraries(seven.vst.base debug "${PLUGINTERFACES_LIB_Debug}" optimized "${PLUGINTERFACES_LIB_Release}")
target_link_libraries(seven.vst.base debug "${VSTGUI_LIB_Debug}" optimized "${VSTGUI_LIB_Release}")
target_link_libraries(seven.vst.base debug "${VSTGUI_SUPPORT_LIB_Debug}" optimized "${VSTGUI_SUPPORT_LIB_Release}")
target_link_libraries(seven.vst.base debug "${VSTGUI_UIDESCRIPTION_LIB_Debug}" optimized "${VSTGUI_UIDESCRIPTION_LIB_Release}")

# Svn vst synth.
set(SVN_VST_SYNTH_SRC_DIR "src/svn.vst.synth")
file(GLOB_RECURSE SVN_VST_SYNTH_SRC "${SVN_VST_SYNTH_SRC_DIR}/*.*")
add_library(seven.vst.synth SHARED ${SVN_VST_SYNTH_SRC})
source_group(TREE "../../${SVN_VST_SYNTH_SRC_DIR}" FILES ${SVN_VST_SYNTH_SRC})
target_include_directories(seven.vst.synth PRIVATE ${SVN_BASE_SRC_DIR})
target_include_directories(seven.vst.synth PRIVATE ${SVN_SYNTH_SRC_DIR})
target_include_directories(seven.vst.synth PRIVATE ${SVN_VST_BASE_SRC_DIR})
target_include_directories(seven.vst.synth PRIVATE ${SVN_VST_SYNTH_SRC_DIR})
target_include_directories(seven.vst.synth PRIVATE ${VST_SDK_375_SRC_DIR})
target_include_directories(seven.vst.synth PRIVATE ${VST_SDK_375_SRC_DIR}/vstgui4)
target_link_libraries(seven.vst.synth seven.base)
target_link_libraries(seven.vst.synth seven.synth)
target_link_libraries(seven.vst.synth seven.vst.base)
set_target_properties(seven.vst.synth PROPERTIES SUFFIX ".vst3")
set_target_properties(seven.vst.synth PROPERTIES RUNTIME_OUTPUT_DIRECTORY_DEBUG "${CMAKE_BINARY_DIR}/Debug/seven.vst.synth.vst3/Contents/x86_64-win")
set_target_properties(seven.vst.synth PROPERTIES RUNTIME_OUTPUT_DIRECTORY_RELEASE "${CMAKE_BINARY_DIR}/Release/seven.vst.synth.vst3/Contents/x86_64-win")
add_custom_target(copy-resources-synth-release ALL DEPENDS seven.vst.synth COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_SOURCE_DIR}/src/svn.vst.synth/resources ${CMAKE_BINARY_DIR}/Release/seven.vst.synth.vst3/Contents/Resources)
add_custom_target(copy-resources-synth-debug ALL DEPENDS seven.vst.synth COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_SOURCE_DIR}/src/svn.vst.synth/resources ${CMAKE_BINARY_DIR}/Debug/seven.vst.synth.vst3/Contents/Resources)
add_custom_target(copy-resources-synth-base-release ALL DEPENDS seven.vst.synth COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_SOURCE_DIR}/src/svn.vst.base/resources ${CMAKE_BINARY_DIR}/Release/seven.vst.synth.vst3/Contents/Resources)
add_custom_target(copy-resources-synth-base-debug ALL DEPENDS seven.vst.synth COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_SOURCE_DIR}/src/svn.vst.base/resources ${CMAKE_BINARY_DIR}/Debug/seven.vst.synth.vst3/Contents/Resources)

# Svn vst ui generator.
set(SVN_VST_UI_SRC_DIR "src/svn.vst.ui")
file(GLOB_RECURSE SVN_VST_UI_SRC "${SVN_VST_UI_SRC_DIR}/*.*")
add_executable(seven.vst.ui ${SVN_VST_UI_SRC})
source_group(TREE "../../${SVN_VST_UI_SRC_DIR}" FILES ${SVN_VST_UI_SRC})
target_include_directories(seven.vst.ui PRIVATE ${SVN_BASE_SRC_DIR})
target_include_directories(seven.vst.ui PRIVATE ${SVN_VST_UI_SRC_DIR})
target_include_directories(seven.vst.ui PRIVATE ${VST_SDK_375_SRC_DIR}/vstgui4)
target_link_libraries(seven.vst.ui seven.base)